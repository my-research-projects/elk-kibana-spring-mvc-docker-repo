
version: '3'

services:

  kafkaservice:
    build:
      context: .
      dockerfile: Dockerfile-kafka
    image: exercice/kafka-v0.10.2.0
    container_name: kafka-v0.10.2.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_HOST_NAME: $KAFKA_HOST_NAME
      KAFKA_PORT: $KAFKA_PORT
      KAFKA_TOPIC_NAME: $KAFKA_TOPIC_NAME    
      KAFKA_BROKER_ID: $KAFKA_BROKER_ID
      KAFKA_ZOOKEEPER_CONNECT: $KAFKA_ZOOKEEPER_CONNECT
      KAFKA_ADVERTISED_LISTENERS: $KAFKA_ADVERTISED_LISTENERS
      LISTENERS: $LISTENERS

  elasticservice:
    build:
      context: .
      dockerfile: Dockerfile-elastic
    image: exercice/elastic-v5.4.0
    container_name: elastic-v5.4.0
    ports:
      - "9200:9200"
      - "9300:9300"

  logstashservice:
    build:
      context: .
      dockerfile: Dockerfile-logstash
    image: exercice/logstash-v5.4.0
    container_name: logstash-v5.4.0
    depends_on: 
      - kafkaservice
      - elasticservice
    environment:
      KAFKA_HOST_NAME: $KAFKA_HOST_NAME
      KAFKA_PORT: $KAFKA_PORT
      KAFKA_TOPIC_NAME: $KAFKA_TOPIC_NAME
      ELASTICSEARCH_HOST: $ELASTICSEARCH_HOST
      ELASTICSEARCH_PORT: $ELASTICSEARCH_PORT
      ELASTICSEARCH_INDEX: $ELASTICSEARCH_INDEX

  kibanaservice:
    build:
      context: .
      dockerfile: Dockerfile-kibana     
    image: exercice/kibana-v5.4.0
    container_name: kibana-v5.4.0
    depends_on: 
      - elasticservice
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOST: $ELASTICSEARCH_HOST
      ELASTICSEARCH_PORT: $ELASTICSEARCH_PORT

  registerservice:
    build:
      context: .
      dockerfile: Dockerfile-tomcat
    image: exercice/elk-spring-mvc-web
    container_name: elk-spring-mvc-web
    ports:
      - "8080:8080"
    environment:
      REGISTERAPP_HOST_NAME: $REGISTERAPP_HOST_NAME
      REGISTERAPP_PORT: $REGISTERAPP_PORT
      KAFKA_HOST_NAME: $KAFKA_HOST_NAME
      KAFKA_PORT: $KAFKA_PORT
      KAFKA_TOPIC_NAME: $KAFKA_TOPIC_NAME
